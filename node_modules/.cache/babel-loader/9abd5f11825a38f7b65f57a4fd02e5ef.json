{"ast":null,"code":"import { getProductsPending, getProductsSuccess, getProductsError, getByIdProductsPending, getByIdProductsSuccess, getByIdProductsError, deleteProductsPending, deleteProductsSuccess, deleteProductsError, postProductsPending, postProductsSuccess, postProductsError, editProductsPending, editProductsSuccess, editProductsError } from './actions';\nexport const getProducts = () => {\n  return async dispatch => {\n    dispatch(getProductsPending());\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/products`);\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        dispatch(getProductsError(json.toString()));\n      } else {\n        dispatch(getProductsSuccess(json));\n      }\n    } catch (error) {\n      dispatch(getProductsError(error.toString()));\n    }\n  };\n};\nexport const getByIdProducts = id => {\n  return async dispatch => {\n    dispatch(getByIdProductsPending());\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/products/${id}`);\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        dispatch(getByIdProductsError(json.msg.toString()));\n      } else {\n        dispatch(getByIdProductsSuccess(json));\n      }\n    } catch (error) {\n      dispatch(getByIdProductsError(error.toString()));\n    }\n  };\n};\nexport const deleteProducts = id => {\n  return async dispatch => {\n    dispatch(deleteProductsPending());\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/products/${id}`, {\n        method: 'DELETE'\n      });\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        dispatch(deleteProductsError(json.toString()));\n      } else {\n        dispatch(deleteProductsSuccess(json));\n        alert(\"Producto eliminado\");\n        window.location.reload();\n      }\n    } catch (error) {\n      dispatch(deleteProductsError(error.toString()));\n    }\n  };\n};\nexport const postProducts = (id, name, description, price, stock) => {\n  return async dispatch => {\n    dispatch(postProductsPending());\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/products`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          name: name,\n          description: description,\n          price: price,\n          stock: stock\n        })\n      });\n      const json = await response.json();\n\n      if (response.status === 201) {\n        dispatch(postProductsSuccess(json));\n      } else {}\n    } catch (error) {\n      dispatch(postProductsError(error.toString()));\n    }\n  };\n};\nexport const editProducts = (id, name, description, price, stock) => {\n  return async dispatch => {\n    dispatch(editProductsPending());\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/products/${id}`, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name,\n          description: description,\n          price: price,\n          stock: stock\n        })\n      });\n      const json = await response.json();\n\n      if (response.status === 202) {\n        dispatch(editProductsSuccess(json));\n      } else {}\n    } catch (error) {\n      dispatch(editProductsError(error.toString()));\n    }\n  };\n};","map":{"version":3,"names":["getProductsPending","getProductsSuccess","getProductsError","getByIdProductsPending","getByIdProductsSuccess","getByIdProductsError","deleteProductsPending","deleteProductsSuccess","deleteProductsError","postProductsPending","postProductsSuccess","postProductsError","editProductsPending","editProductsSuccess","editProductsError","getProducts","dispatch","response","fetch","process","env","REACT_APP_API_URL","json","status","toString","error","getByIdProducts","id","msg","deleteProducts","method","alert","window","location","reload","postProducts","name","description","price","stock","headers","Accept","body","JSON","stringify","editProducts"],"sources":["/Users/gonzalorescia/Desktop/UAI/Materias/4to/MCGA/parcial2MCGA/src/redux/products/thunks.js"],"sourcesContent":["import {\n    getProductsPending,\n    getProductsSuccess,\n    getProductsError,\n    getByIdProductsPending,\n    getByIdProductsSuccess,\n    getByIdProductsError,\n    deleteProductsPending,\n    deleteProductsSuccess,\n    deleteProductsError,\n    postProductsPending,\n    postProductsSuccess,\n    postProductsError,\n    editProductsPending,\n    editProductsSuccess,\n    editProductsError\n  } from './actions';\n  \n  export const getProducts = () => {\n    return async (dispatch) => {\n      dispatch(getProductsPending());\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/products`);\n        const json = await response.json();\n        if(response.status !== 200 ){\n          dispatch(getProductsError(json.toString()))\n        }else {\n          dispatch(getProductsSuccess(json));\n        }\n      } catch (error) {\n        dispatch(getProductsError(error.toString()));\n      }\n    };\n  };\n\n\n  export const getByIdProducts = (id) => {\n    return async (dispatch) => {\n      dispatch(getByIdProductsPending());\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/products/${id}`);\n        const json = await response.json();\n        if(response.status !== 200 ){\n          dispatch(getByIdProductsError(json.msg.toString()))\n        }else {\n          dispatch(getByIdProductsSuccess(json));\n        }\n      } catch (error) {\n        dispatch(getByIdProductsError(error.toString()));\n      }\n    };\n  };\n  \n  export const deleteProducts = (id) => {\n    return async (dispatch) => {\n      dispatch(deleteProductsPending());\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/products/${id}`, {\n          method: 'DELETE'\n        });\n        const json = await response.json();\n        if(response.status !== 200 ){\n          dispatch(deleteProductsError(json.toString()))\n        }else {\n          dispatch(deleteProductsSuccess(json));\n          alert(\"Producto eliminado\");\n          window.location.reload();\n        }\n      } catch (error) {\n        dispatch(deleteProductsError(error.toString()));\n      }\n    };\n  };\n  \n  export const postProducts = (id,name,description,price,stock) => {\n    return async (dispatch) => {\n      dispatch(postProductsPending());\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/products`,{\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: id, \n              name: name,\n              description: description,\n              price: price,\n              stock: stock\n            })\n          });\n          const json = await response.json();\n          if (response.status === 201) {\n            dispatch(postProductsSuccess(json));\n          } else {\n          }\n        } catch (error) {\n          dispatch(postProductsError(error.toString()));\n        }\n    };\n  };\n  \n  export const editProducts = (id,name,description,price,stock) => {\n    return async (dispatch) => {\n      dispatch(editProductsPending());\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/products/${id}`,{\n            method: 'PUT',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              name: name,\n              description: description,\n              price: price,\n              stock: stock\n            })\n          });\n          const json = await response.json();\n          if (response.status === 202) {\n            dispatch(editProductsSuccess(json));\n          } else {\n          }\n        } catch (error) {\n          dispatch(editProductsError(error.toString()));\n        }\n    };\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module"}