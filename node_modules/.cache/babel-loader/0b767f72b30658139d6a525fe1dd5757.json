{"ast":null,"code":"import { getUser, getUserError, getUserLoading } from './actions';\nexport const getUsers = data => async dispatch => {\n  dispatch(getUserLoading());\n\n  try {\n    const response = await fetch('https://backend-mcga-final.vercel.app/Users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    if (response.status !== 200) return dispatch(getUserError(json));\n    dispatch(getUser(json));\n    localStorage.setItem(\"user\", JSON.stringify(json.data));\n  } catch (error) {\n    dispatch(getUserError(error));\n  }\n};\nexport const login = data => async dispatch => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    if (response.status !== 200) return dispatch(getUserError(json));\n    localStorage.setItem(\"accessToken\", JSON.stringify(json.data));\n  } catch (e) {\n    dispatch(getUserError(e));\n  }\n};","map":{"version":3,"names":["getUser","getUserError","getUserLoading","getUsers","data","dispatch","response","fetch","method","headers","body","JSON","stringify","json","status","localStorage","setItem","error","login","process","env","REACT_APP_API_URL","e"],"sources":["/Users/gonzalorescia/Desktop/UAI/Materias/4to/MCGA/final/frontfinalMCGA/src/redux/users/thunks.js"],"sourcesContent":["import {\n    getUser,\n    getUserError,\n    getUserLoading\n} from './actions'\n\nexport const getUsers = (data) => async (dispatch) => {\n    dispatch(getUserLoading());\n    try {\n        const response = await fetch('https://backend-mcga-final.vercel.app/Users/login', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(data)\n        });\n\n        const json = await response.json();\n        if (response.status !== 200)\n            return dispatch(getUserError(json));\n\n        dispatch(getUser(json));\n        localStorage.setItem(\"user\", JSON.stringify(json.data));\n    } catch (error) {\n        dispatch(getUserError(error));\n    }\n}\n\nexport const login = (data) => async (dispatch) => {\n    try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/users`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(data)\n        });\n\n        const json = await response.json();\n        if (response.status !== 200)\n            return dispatch(getUserError(json));\n\n        localStorage.setItem(\"accessToken\", JSON.stringify(json.data));\n    } catch (e) {\n        dispatch(getUserError(e));\n    }\n}"],"mappings":"AAAA,SACIA,OADJ,EAEIC,YAFJ,EAGIC,cAHJ,QAIO,WAJP;AAMA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;EAClDA,QAAQ,CAACH,cAAc,EAAf,CAAR;;EACA,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAD,EAAsD;MAC9EC,MAAM,EAAE,MADsE;MAE9EC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFqE;MAG9EC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;IAHwE,CAAtD,CAA5B;IAMA,MAAMS,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;IACA,IAAIP,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EACI,OAAOT,QAAQ,CAACJ,YAAY,CAACY,IAAD,CAAb,CAAf;IAEJR,QAAQ,CAACL,OAAO,CAACa,IAAD,CAAR,CAAR;IACAE,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACC,SAAL,CAAeC,IAAI,CAACT,IAApB,CAA7B;EACH,CAbD,CAaE,OAAOa,KAAP,EAAc;IACZZ,QAAQ,CAACJ,YAAY,CAACgB,KAAD,CAAb,CAAR;EACH;AACJ,CAlBM;AAoBP,OAAO,MAAMC,KAAK,GAAId,IAAD,IAAU,MAAOC,QAAP,IAAoB;EAC/C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEY,OAAO,CAACC,GAAR,CAAYC,iBAAkB,QAAlC,EAA2C;MACnEb,MAAM,EAAE,MAD2D;MAEnEC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAF0D;MAGnEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;IAH6D,CAA3C,CAA5B;IAMA,MAAMS,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;IACA,IAAIP,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EACI,OAAOT,QAAQ,CAACJ,YAAY,CAACY,IAAD,CAAb,CAAf;IAEJE,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCL,IAAI,CAACC,SAAL,CAAeC,IAAI,CAACT,IAApB,CAApC;EACH,CAZD,CAYE,OAAOkB,CAAP,EAAU;IACRjB,QAAQ,CAACJ,YAAY,CAACqB,CAAD,CAAb,CAAR;EACH;AACJ,CAhBM"},"metadata":{},"sourceType":"module"}